{
	// Place your threejs-demo 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Create a threejs-demo html template": {
		"scope": "html",
		"prefix": "template",
		"body": [
			"<!DOCTYPE html>",
            "<html lang=\"en\">",
            "   <head>",
            "       <meta charset=\"UTF-8\">",
            "       <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">",
            "       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
            "       <title>$1</title>",
            "       <style>",
            "           *{",
            "               padding: 0;",
            "               margin: 0;",
            "           }",
            "       </style>",
            "   </head>",
            "   <script type=\"importmap\">",
            "           {",
            "               \"imports\": {",
            "                   \"three\": \"../lib/three/build/three.module.js\",",
            "                   \"three/examples/jsm/\": \"../lib/three/examples/jsm/\"",
            "               }",
            "           }",
            "         </script>",
            "   <body>",
            "       <div id=\"webgl-output\"></div>",
            "       <script src=\"./$1.js\" type=\"module\"></script>",
            "   </body>",
            "</html>",
		],
		"description": "a html template to create threejs-demo"
	},
    "Create a threejs-demo javascript template": {
		"scope": "javascript",
		"prefix": "template",
		"body": [
			"import {",
            "    Mesh,",
            "    BoxGeometry,",
            "    MeshNormalMaterial,",
            "} from 'three';",
            "import {",
            "    initRenderer,",
            "    initOrthographicCamera,",
            "    initCustomGrid,",
            "    initAxesHelper,",
            "    initOrbitControls,",
            "    initScene,",
            "    initGUI,",
            "    resize",
            "} from '../lib/tools/index.js';",
            "",
            "window.onload = () => {",
            "    init();",
            "};",
            "",
            "function init() {",
            "    const renderer = initRenderer();",
            "    const camera = initOrthographicCamera();",
            "    camera.up.set(0, 0, 1);",
            "    camera.updateProjectionMatrix();",
            "",
            "    const scene = initScene();",
            "    initAxesHelper(scene);",
            "    renderer.setClearColor(0xffffff);",
            "    initCustomGrid(scene);",
            "",
            "    const controls = initOrbitControls(camera, renderer.domElement);",
            "    const mesh = new Mesh(new BoxGeometry(3, 3, 3), new MeshNormalMaterial());",
            "    scene.add(mesh);",
            "    $1",
            "    ",
            "    function render() {",
            "        controls.update();",
            "",
            "        renderer.render(scene, camera);",
            "        requestAnimationFrame(render);",
            "    }",
            "    render();",
            "",
            "    resize(renderer, camera);",
            "    const gui = initGUI();",
            "}",
		],
		"description": "a javascript template to create threejs-demo"
	}
}